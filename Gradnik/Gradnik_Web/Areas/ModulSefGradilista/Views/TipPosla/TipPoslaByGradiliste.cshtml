@model Gradnik_Web.Areas.ModulSefGradilista.Models.TipPoslaVM
@using Gradnik_Web.Areas.ModulSefGradilista.Models;
@{
  
    Layout = "~/Views/Shared/_Layout.cshtml";

}




<table class="table table-hover table-bordered" id="table-1">
    <thead>
        <tr>
            <th style="background-color:rgb(48, 54, 65); color:white;">Naziv</th>
            <th style="background-color:rgb(48, 54, 65); color:white;">Broj radnika</th>
            <th style="background-color:rgb(48, 54, 65); color:white;">Zaduži</th>
            <th style="background-color:rgb(48, 54, 65); color:white;">Aktivni radnici</th>
            <th style="background-color:rgb(48, 54, 65); color:white;">Odrađeni sati</th>
            



        </tr>
    </thead>
    <tbody>
        @Html.HiddenFor(model=>model.GradilisteId)
        
        @foreach (TipPoslaRowVM item in Model.listTipPosla)
        {
            <tr class="odd gradeX" onclick="location.href = '@(Url.Action("Pregled", "Projekti", new { id = item.TipPoslaId }))'">
                <td>@item.TipPoslaNaziv</td>
                <td>@item.count</td>
                <td>@Html.ActionLink("Novo zaduženje", "Dodaj", "RaspodjelaPosla", new { gradilisteId=Model.GradilisteId, tipPoslaId = item.TipPoslaId }, new { @class = "btn btn-blue" })</td>
                <td>@Html.ActionLink("Prikaz radnika", "PrikazRadnika", "RaspodjelaPosla", new { gradilisteId = Model.GradilisteId, tipPoslaId = item.TipPoslaId }, new { @class = "btn btn-blue" })</td>
                <td>@Html.ActionLink("Evidentiraj sate", "PrikazRadnika2", "RaspodjelaPosla", new { gradilisteId = Model.GradilisteId, tipPoslaId = item.TipPoslaId }, new { @class = "btn btn-blue" })</td>

                }



            </tr>

        }





    </tbody>
    <tfoot>
        <tr>
            <th>Naziv</th>
            <th>Zaduži</th>
            <th>Aktivni radnici</th>
            <th>Sati</th>
          
        </tr>
    </tfoot>
</table>







<script type="text/javascript">
    function otvoriDialog() {
        $('#basicModal').modal();
    }



</script>



<script type="text/javascript">


    var responsiveHelper;
    var breakpointDefinition = {
        tablet: 1024,
        phone: 480
    };
    var tableContainer;

    jQuery(document).ready(function ($) {

        tableContainer = $("#table-1");

        tableContainer.dataTable({
            "sPaginationType": "bootstrap",
            "aLengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            "bStateSave": true,


            // Responsive Settings
            bAutoWidth: false,
            fnPreDrawCallback: function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper) {

                    responsiveHelper = new ResponsiveDatatablesHelper(tableContainer, breakpointDefinition);
                }
            },
            fnRowCallback: function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                responsiveHelper.createExpandIcon(nRow);
            },
            fnDrawCallback: function (oSettings) {
                responsiveHelper.respond();
            }
        });


        $(".dataTables_wrapper select").select2({
            minimumResultsForSearch: -1
        });
    });


</script>

<style>
    tr {
        cursor: pointer;
    }
</style>